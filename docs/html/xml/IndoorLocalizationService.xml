<?xml version='1.0' encoding='utf-8'?>
<class id="IndoorLocalizationService" interface="true" name="IndoorLocalizationService" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <base access="public">
    <type name="BLEpp::GenericService" ref="BLEpp::GenericService#BLEpp::GenericService" />
    <brief> Generic Service is a <ref ref="BLEpp::Service#BLEpp::Service">BLEpp::Service</ref> and <ref ref="BLEpp::Service#BLEpp::Service::Service">BLEpp::Service::Service</ref> with characteristics</brief>
  </base>
  <typedef id="IndoorLocalizationService::func_t" name="func_t">
    <type name="int8_t" />
  </typedef>
  <constructor abstract="yes" id="IndoorLocalizationService::IndoorLocalizationService" name="IndoorLocalizationService" />
  <method abstract="yes" id="IndoorLocalizationService::getNearbyTimeout" name="getNearbyTimeout">
    <brief>* Returns the number of ticks the rssi of a device is not above threshold before a device is considered not nearby. </brief>
    <return>
      <type name="uint16_t" />
    </return>
  </method>
  <method abstract="yes" id="IndoorLocalizationService::init" name="init">
    <brief>Initialize a IndoorLocalization object</brief>
    <doc>Add all characteristics and initialize them where necessary.
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" id="IndoorLocalizationService::on_ble_event" name="on_ble_event" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="IndoorLocalizationService::on_ble_event::p_ble_evt" name="p_ble_evt">
      <type name="ble_evt_t" qualifier="*" />
    </argument>
    <override name="BLEpp::Service::on_ble_event" ref="BLEpp::Service#BLEpp::Service::on_ble_event" />
  </method>
  <method abstract="yes" id="IndoorLocalizationService::onRSSIChanged" name="onRSSIChanged">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="IndoorLocalizationService::onRSSIChanged::rssi" name="rssi">
      <type name="int8_t" />
    </argument>
  </method>
  <method abstract="yes" id="IndoorLocalizationService::setNearbyTimeout" name="setNearbyTimeout">
    <brief>* Sets the number of ticks the rssi of a device is not above threshold before a device is considered not nearby. </brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="IndoorLocalizationService::setNearbyTimeout::counts" name="counts">
      <type name="uint16_t" />
    </argument>
  </method>
  <method abstract="yes" id="IndoorLocalizationService::setRSSILevel" name="setRSSILevel">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="IndoorLocalizationService::setRSSILevel::RSSILevel" name="RSSILevel">
      <type name="int8_t" />
    </argument>
  </method>
  <method abstract="yes" id="IndoorLocalizationService::setRSSILevelHandler" name="setRSSILevelHandler">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="IndoorLocalizationService::setRSSILevelHandler::func" name="func">
      <type name="func_t" ref="IndoorLocalizationService#IndoorLocalizationService::func_t" />
    </argument>
  </method>
  <method abstract="yes" id="IndoorLocalizationService::tick" name="tick">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::addDeviceTypeCharactersitic" name="addDeviceTypeCharactersitic">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::addPeripheralListCharacteristic" name="addPeripheralListCharacteristic">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::addRoomCharacteristic" name="addRoomCharacteristic">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::addScanControlCharacteristic" name="addScanControlCharacteristic">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::addSignalStrengthCharacteristic" name="addSignalStrengthCharacteristic">
    <brief>TODO -oDE: are really all of these characteristics part of the</brief>
    <doc>indoor localisation?</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::addTrackedDeviceCharacteristic" name="addTrackedDeviceCharacteristic">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::addTrackedDeviceListCharacteristic" name="addTrackedDeviceListCharacteristic">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::loadPersistentStorage" name="loadPersistentStorage">
    <brief>Get a handle to the persistent storage struct and load it from FLASH.</brief>
    <doc>Persistent storage is implemented in FLASH. Just as with SSDs, it is important to realize that
writing less than a minimal block strains the memory just as much as flashing the entire block.
Hence, there is an entire struct that can be filled and flashed at once.
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::readTrackedDevices" name="readTrackedDevices">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::savePersistentStorage" name="savePersistentStorage">
    <brief>Save to FLASH.</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::startTracking" name="startTracking">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::stopTracking" name="stopTracking">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" access="protected" id="IndoorLocalizationService::writeTrackedDevices" name="writeTrackedDevices">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
</class>
