<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="ScanResult" name="ScanResult" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief> Result of a scan device operation</brief>
  <doc>The ScanResult class stores a list of devices which were detected during
a scan operation. It keeps track of how often a device was seen and with
which RSSI value.
</doc>
  <base access="public">
    <type name="BLEpp::BufferAccessor" />
  </base>
  <constructor id="ScanResult::ScanResult" name="ScanResult">
    <brief>Default constructor</brief>
  </constructor>
  <method id="ScanResult::assign" name="assign" virtual="yes">
    <brief>@inherit</brief>
    <return>
      <type builtin="yes" name="int" />
    </return>
    <argument id="ScanResult::assign::buffer" name="buffer">
      <type name="buffer_ptr_t" />
    </argument>
    <argument id="ScanResult::assign::maxLength" name="maxLength">
      <type name="uint16_t" />
    </argument>
  </method>
  <method abstract="yes" id="ScanResult::clear" name="clear">
    <brief>Clear the list of devices</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="ScanResult::getBuffer" name="getBuffer" virtual="yes">
    <brief>@inherit</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="ScanResult::getBuffer::buffer" name="buffer">
      <type name="buffer_ptr_t" qualifier=" &amp;" />
    </argument>
    <argument id="ScanResult::getBuffer::dataLength" name="dataLength">
      <type name="uint16_t" qualifier=" &amp;" />
    </argument>
  </method>
  <method id="ScanResult::getDataLength" name="getDataLength" virtual="yes">
    <brief>@inherit</brief>
    <return>
      <type name="uint16_t" />
    </return>
  </method>
  <method id="ScanResult::getMaxLength" name="getMaxLength" virtual="yes">
    <brief>@inherit</brief>
    <return>
      <type name="uint16_t" />
    </return>
  </method>
  <method abstract="yes" id="ScanResult::getSize" name="getSize">
    <brief>Return the number of devices already stored in the list</brief>
    <return>
      <doc>number of stored devices</doc>
      <type name="uint16_t" />
    </return>
  </method>
  <method abstract="yes" id="ScanResult::print" name="print">
    <brief>Print the list of devices for debug purposes to the UART</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="ScanResult::release" name="release">
    <brief>Release assigned buffer</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" id="ScanResult::update" name="update">
    <brief>Update the list with the given device</brief>
    <doc>If the bluetooth address is already in the list increase the occurrence by one
and update the rssi value; if it is not yet in the list, add it to the list with
occurrence=1; if the list is full, remove the device with lowest occurrence and
add the new device to the list with occurence=1
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="ScanResult::update::adrs_ptr" name="adrs_ptr">
      <doc>pointer to an array of length &amp;lt;BLE\_GAP\_ADDR\_LEN&amp;gt;
  which contains the bluetooth address of the device in little-endian</doc>
      <type name="uint8_t" qualifier="*" />
    </argument>
    <argument id="ScanResult::update::rssi" name="rssi">
      <doc>rssi value of the advertisement package</doc>
      <type name="int8_t" />
    </argument>
  </method>
</class>
